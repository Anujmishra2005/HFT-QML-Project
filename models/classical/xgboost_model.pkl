import joblib
from xgboost import XGBClassifier
from sklearn.metrics import accuracy_score
import os

MODEL_PATH = "models/classical/xgboost_model.pkl"

def train_xgboost(X_train, y_train):
    model = XGBClassifier(use_label_encoder=False, eval_metric='logloss', random_state=42)
    model.fit(X_train, y_train)
    os.makedirs("models/classical", exist_ok=True)
    joblib.dump(model, MODEL_PATH)
    print(f"XGBoost model saved at {MODEL_PATH}")
    return model

def load_xgboost():
    if not os.path.exists(MODEL_PATH):
        raise FileNotFoundError(f"{MODEL_PATH} not found, train model first.")
    model = joblib.load(MODEL_PATH)
    return model

def evaluate_xgboost(model, X_test, y_test):
    preds = model.predict(X_test)
    acc = accuracy_score(y_test, preds)
    print(f"XGBoost Accuracy: {acc:.4f}")
    return acc
